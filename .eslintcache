[{"D:\\My Project\\bloodbank-admin\\src\\index.js":"1","D:\\My Project\\bloodbank-admin\\src\\components\\App.js":"2","D:\\My Project\\bloodbank-admin\\src\\components\\login\\login.js":"3","D:\\My Project\\bloodbank-admin\\src\\components\\sharedComponents\\copyright.js":"4","D:\\My Project\\bloodbank-admin\\src\\routes\\history.js":"5","D:\\My Project\\bloodbank-admin\\src\\components\\sharedComponents\\header.js":"6","D:\\My Project\\bloodbank-admin\\src\\store.js":"7","D:\\My Project\\bloodbank-admin\\src\\reducers\\allReducers.js":"8","D:\\My Project\\bloodbank-admin\\src\\reducers\\loginReducer.js":"9","D:\\My Project\\bloodbank-admin\\src\\actions\\actionTypes.js":"10","D:\\My Project\\bloodbank-admin\\src\\actions\\loginAction.js":"11","D:\\My Project\\bloodbank-admin\\src\\url\\apiUrl.js":"12","D:\\My Project\\bloodbank-admin\\src\\reducers\\getAllUserReducer.js":"13","D:\\My Project\\bloodbank-admin\\src\\actions\\allUsersAction.js":"14","D:\\My Project\\bloodbank-admin\\src\\components\\sharedComponents\\basicTable.js":"15","D:\\My Project\\bloodbank-admin\\src\\components\\users\\users.js":"16"},{"size":346,"mtime":1607775847098,"results":"17","hashOfConfig":"18"},{"size":478,"mtime":1607792857188,"results":"19","hashOfConfig":"18"},{"size":6607,"mtime":1607766963241,"results":"20","hashOfConfig":"18"},{"size":464,"mtime":1607673858052,"results":"21","hashOfConfig":"18"},{"size":86,"mtime":1607676315331,"results":"22","hashOfConfig":"18"},{"size":4225,"mtime":1607856513062,"results":"23","hashOfConfig":"18"},{"size":244,"mtime":1607707715111,"results":"24","hashOfConfig":"18"},{"size":248,"mtime":1607765249750,"results":"25","hashOfConfig":"18"},{"size":480,"mtime":1607710316789,"results":"26","hashOfConfig":"18"},{"size":443,"mtime":1607763926191,"results":"27","hashOfConfig":"18"},{"size":1653,"mtime":1607765794236,"results":"28","hashOfConfig":"18"},{"size":631,"mtime":1607863155796,"results":"29","hashOfConfig":"18"},{"size":660,"mtime":1607767051481,"results":"30","hashOfConfig":"18"},{"size":1280,"mtime":1607772376155,"results":"31","hashOfConfig":"18"},{"size":7445,"mtime":1607872607722,"results":"32","hashOfConfig":"18"},{"size":428,"mtime":1607854939302,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1v6mvnf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\My Project\\bloodbank-admin\\src\\index.js",[],["69","70"],"D:\\My Project\\bloodbank-admin\\src\\components\\App.js",[],"D:\\My Project\\bloodbank-admin\\src\\components\\login\\login.js",["71"],"import React, { useState, useReducer } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport '../../index.css'\r\nimport {\r\n    Avatar, Button,\r\n    CssBaseline,\r\n    TextField,\r\n    Link,\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Container\r\n} from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Copyright from '../sharedComponents/copyright'\r\nimport { LoginAction } from '../../actions/loginAction';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n        outlineColor: 'black'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        border: '2px solid black',\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        fontSize: '17px'\r\n    },\r\n    error: {\r\n        fontSize: '15px',\r\n        color: 'red',\r\n    }\r\n}));\r\n\r\n\r\nfunction Login(props) {\r\n    console.log('props',props)\r\n    // const [state, dispatch] = useReducer(LoginAction)\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailError, setEmailError] = useState({})\r\n    const [passwordError, setPasswordError] = useState({})\r\n    console.log('history', props)\r\n    const loginUser = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Login User\")\r\n        const isValid = await validateInput()\r\n        console.log('isValid', isValid)\r\n        if (isValid === true) {\r\n            let formData = { email: email, password: password }\r\n            console.log(`${JSON.stringify(formData)}`)\r\n            props.LoginAction(formData, response => {\r\n                console.log('response', response)\r\n                if (response) {\r\n                    if (response.error === false) {\r\n                        window.location.assign('/Users')\r\n                    }\r\n                    else {\r\n                        alert(response.message)\r\n                    }\r\n                }\r\n                else {\r\n                    alert('Something went wrong')\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            console.log('Unable to validate user')\r\n        }\r\n    }\r\n\r\n    const validateInput = async () => {\r\n        let isValid = true;\r\n        const emailError = {}\r\n        const passwordError = {}\r\n\r\n        if (email === '') {\r\n            emailError.empty = 'Email is empty';\r\n            isValid = false\r\n        }\r\n        if (!email.includes('@')) {\r\n            emailError.valid = 'Not a valid email'\r\n            isValid = false\r\n        }\r\n        if (password === '') {\r\n            passwordError.empty = 'Password is empty'\r\n            isValid = false\r\n        }\r\n        setPasswordError(passwordError)\r\n        setEmailError(emailError)\r\n        return isValid;\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n          </Typography>\r\n                <form className={classes.form} validate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={email}\r\n                        onChange={(e) => { setEmail(e.target.value) }}\r\n                    />\r\n                    {Object.keys(emailError).map((key) => {\r\n                        return key && key ? <Typography component=\"h6\" variant=\"h6\" className={classes.error}>\r\n                            {emailError[key]}\r\n                        </Typography> : null\r\n                    })}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    {Object.keys(passwordError).map((key) => {\r\n                        return key && key ? <Typography component=\"h6\" variant=\"h6\" className={classes.error}>\r\n                            {passwordError[key]}\r\n                        </Typography> : null\r\n\r\n                    })}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        onClick={loginUser}>\r\n                        Sign In\r\n                     </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                     </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { currentUser } = state.loginReducer;\r\n    return {\r\n        currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ LoginAction }, dispatch);\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n\r\n","D:\\My Project\\bloodbank-admin\\src\\components\\sharedComponents\\copyright.js",[],"D:\\My Project\\bloodbank-admin\\src\\routes\\history.js",[],"D:\\My Project\\bloodbank-admin\\src\\components\\sharedComponents\\header.js",["72","73"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    SwipeableDrawer, List,\r\n    Avatar,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PowerSettingsNewRoundedIcon from '@material-ui/icons/PowerSettingsNewRounded';\r\nimport './modal.css'\r\n\r\n\r\nconst max = 999999;\r\nconst min = 100000;\r\nfunction generateColor() {\r\n    let bgColor = Math.floor(Math\r\n        .random() * (max - min + 1)) + min;\r\n    return bgColor\r\n}\r\n\r\nlet imageColor = generateColor()\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        background: 'rgba(241, 184, 184,0.1)',\r\n        height: '100%',\r\n        padding: '17px',\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    navItem: {\r\n        padding: '15px',\r\n        borderBottom: '2px solid black',\r\n    },\r\n    menuIcon: {\r\n        cursor: 'pointer',\r\n        fontSize: '46px',\r\n        margin: 'auto',\r\n        paddingTop: '4px',\r\n        paddingLeft: '20px'\r\n    },\r\n    purple: {\r\n        float: 'right',\r\n        margin: '10px',\r\n        width: '30px',\r\n        height: '30px',\r\n        background: `#${imageColor}`,\r\n        borderRadius: '50%',\r\n        cursor: 'pointer',\r\n    },\r\n    header: {\r\n        background: 'rgba(165, 21, 21, 0.9)',\r\n        padding: '5px',\r\n        margin: 0,\r\n    }\r\n});\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const menus = ['Inbox', 'Starred', 'Send email', 'Drafts']\r\n    const [state, setState] = useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n    const [name, setName] = useState('A')\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const showPopUp = async () => {\r\n        setShowModal(true)\r\n    }\r\n    const closePopUp = async () => {\r\n        setShowModal(false)\r\n    }\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                {menus.map((text, index) => (\r\n                    <ListItem button key={text} className={classes.navItem}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            {/* <Divider /> */}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <MenuIcon onClick={toggleDrawer('left', true)} className={classes.menuIcon} />\r\n            <SwipeableDrawer\r\n                anchor={'left'}\r\n                open={state['left']}\r\n                onClose={toggleDrawer('left', false)}\r\n                onOpen={toggleDrawer('left', true)}\r\n            >\r\n                {list('left')}\r\n            </SwipeableDrawer>\r\n            <Avatar variant=\"square\" className={classes.purple} onClick={showModal === false ? showPopUp : closePopUp}>{name}</Avatar>\r\n            {showModal && showModal ? <div className=\"cardLayout\">\r\n                <div className=\"content\">\r\n                    <Typography style={{borderBottom: '2px solid black',paddingBottom: '6px'}}>Admin One</Typography>\r\n                    <div className=\"flex\">\r\n                        <PowerSettingsNewRoundedIcon className=\"logOut\" />\r\n                        <Typography className=\"logOut\">logout</Typography>\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </div >\r\n    );\r\n}\r\n","D:\\My Project\\bloodbank-admin\\src\\store.js",[],"D:\\My Project\\bloodbank-admin\\src\\reducers\\allReducers.js",[],"D:\\My Project\\bloodbank-admin\\src\\reducers\\loginReducer.js",[],"D:\\My Project\\bloodbank-admin\\src\\actions\\actionTypes.js",[],"D:\\My Project\\bloodbank-admin\\src\\actions\\loginAction.js",[],"D:\\My Project\\bloodbank-admin\\src\\url\\apiUrl.js",[],"D:\\My Project\\bloodbank-admin\\src\\reducers\\getAllUserReducer.js",[],"D:\\My Project\\bloodbank-admin\\src\\actions\\allUsersAction.js",[],"D:\\My Project\\bloodbank-admin\\src\\components\\sharedComponents\\basicTable.js",[],"D:\\My Project\\bloodbank-admin\\src\\components\\users\\users.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":37},{"ruleId":"78","severity":1,"message":"82","line":10,"column":5,"nodeType":"80","messageId":"81","endLine":10,"endColumn":9},{"ruleId":"78","severity":1,"message":"83","line":75,"column":18,"nodeType":"80","messageId":"81","endLine":75,"endColumn":25},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'setName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]